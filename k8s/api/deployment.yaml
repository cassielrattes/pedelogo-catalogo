apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      initContainers:
        - name: init-pod
          image: busybox:1.28
          command:
            [
              "sh",
              "-c",
              "until nslookup mongo-service.default.svc.cluster.local; do echo Aguardando o Banco de Dados; sleep 2; done",
            ]
      containers:
        - name: api
          image: cassielrattescortez/pedelogo-catalogo:{{tag}}
          ports:
            - containerPort: 80
              name: http
            - containerPort: 443
              name: https
          imagePullPolicy: Always
          resources:
            requests:
              memory: 32Mi
              cpu: 150m
            limits:
              memory: 64Mi
              cpu: 500m
          startupProbe:
            httpGet:
              path: /health
              port: 80
              scheme: HTTP
            failureThreshold: 30 # quantas vezes vou considerar falhas/erros até ele restartar o pod
            periodSeconds: 10 # de quanto em quanto tempo verifica a saúde da aplicação
          readinessProbe:
            httpGet:
              path: /read
              port: 80
              scheme: HTTP
            timeoutSeconds: 1 # o tempo que espera ter uma resposta
            failureThreshold: 3 # quantas vezes vou considerar falhas/erros até ele restartar o pod
            periodSeconds: 5 # de quanto em quanto tempo verifica a saúde da aplicação
            # successThreshold: 1 # quantas sucessos consecutivos eu preciso ter para zerar as falhas
          livenessProbe:
            httpGet:
              path: /health
              port: 80
              scheme: HTTP
            timeoutSeconds: 1 # o tempo que espera ter uma resposta
            failureThreshold: 3 # quantas vezes vou considerar falhas/erros até ele restartar o pod
            periodSeconds: 5 # de quanto em quanto tempo verifica a saúde da aplicação
            # exec:
            # command:
            #   - ""

            # tcpSocket:
            #   port: 5000
          envFrom:
            - configMapRef:
                name: api-configmap
          env:
            - name: Mongo__User
              valueFrom:
                secretKeyRef:
                  key: MONGO_INITDB_ROOT_USERNAME
                  name: mongodb-secret
            - name: Mongo__Password
              valueFrom:
                secretKeyRef:
                  key: MONGO_INITDB_ROOT_PASSWORD
                  name: mongodb-secret
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - "mongodb"        
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 2
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - "api"               
            # - name: Mongo__Host
            #   value: "mongo-service"
            # - name: Mongo__Port
            #   value: "27017"
            # - name: Mongo__DataBase
            #   value: "admin"
          # imagePullSecrets:
          #   - name: acr-kubedev